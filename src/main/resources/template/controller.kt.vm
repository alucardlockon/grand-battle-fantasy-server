package ${package.Controller}

import ${package.Entity}.${entity}
import ${package.Service}.${table.serviceName}
import org.springframework.beans.factory.annotation.Autowired
import com.baomidou.mybatisplus.extension.plugins.pagination.Page
import org.springframework.web.bind.annotation.*
import com.alucardlockon.grandbattlefantasyserver.base.api.ApiResult
import io.swagger.annotations.Api
import io.swagger.annotations.ApiOperation
import io.swagger.annotations.ApiParam
import com.alucardlockon.grandbattlefantasyserver.base.api.PagerInfo
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper

/**
 * $!{table.comment} 控制器
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = ["$!{table.comment}"])
@RestController
@RequestMapping("${table.entityPath}")
class ${table.controllerName}{

    @Autowired
    lateinit var ${table.entityPath}Service: ${table.serviceName}

    @ApiOperation("获取$!{table.comment}列表")
    @GetMapping("/")
    fun list(@ApiParam("分页参数") pager: PagerInfo): ApiResult {
        val page = Page<${entity}>(pager.pageNumber, pager.pageSize)
        return ApiResult(${table.entityPath}Service.page(page, QueryWrapper<${entity}>()))
    }

    @ApiOperation("获取$!{table.comment}")
    @GetMapping("/{id}")
    fun get(@PathVariable id: Int): ApiResult {
        return ApiResult(${table.entityPath}Service.getById(id))
    }

    @ApiOperation("创建$!{table.comment}")
    @PostMapping("/")
    fun post(@RequestBody ${table.entityPath}:  ${entity}): ApiResult {
        return ApiResult(${table.entityPath}Service.save(${table.entityPath}))
    }

    @ApiOperation("更新$!{table.comment}")
    @PutMapping("/{id}")
    fun put(@PathVariable id: Int,@RequestBody ${table.entityPath}: ${entity}): ApiResult {
        ${table.entityPath}.id = id
        return ApiResult(${table.entityPath}Service.updateById(${table.entityPath}))
    }

    @ApiOperation("删除$!{table.comment}")
    @DeleteMapping("/{id}")
    fun delete(@PathVariable id: Int): ApiResult {
        return ApiResult(${table.entityPath}Service.removeById(id))
    }
}
